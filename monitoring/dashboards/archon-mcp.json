{
  "uid": "archon-mcp",
  "title": "Archon MCP Dashboard",
  "schemaVersion": 38,
  "version": 1,
  "refresh": "30s",
  "panels": [
    {
      "id": 1,
      "type": "timeseries",
      "title": "Latency p95",
      "description": "95th percentile latency over 5m window",
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "s"
        },
        "overrides": []
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service=\"archon-mcp\"}[5m])) by (le))",
          "refId": "A"
        }
      ]
    },
    {
      "id": 2,
      "type": "timeseries",
      "title": "Throughput",
      "description": "Requests per second",
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "reqps"
        },
        "overrides": []
      },
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{service=\"archon-mcp\"}[1m]))",
          "refId": "A"
        }
      ]
    },
    {
      "id": 3,
      "type": "timeseries",
      "title": "Error Rate",
      "description": "Percentage of 5xx responses",
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "percent"
        },
        "overrides": []
      },
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{service=\"archon-mcp\",status=~\"5..\"}[5m])) / sum(rate(http_requests_total{service=\"archon-mcp\"}[5m])) * 100",
          "refId": "A"
        }
      ]
    },
    {
      "id": 4,
      "type": "timeseries",
      "title": "CPU Saturation",
      "description": "Average CPU usage",
      "datasource": {
        "type": "prometheus",
        "uid": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "percent"
        },
        "overrides": []
      },
      "targets": [
        {
          "expr": "avg(rate(process_cpu_seconds_total{service=\"archon-mcp\"}[1m])) * 100",
          "refId": "A"
        }
      ]
    }
  ]
}
