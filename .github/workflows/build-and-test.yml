name: Build and Test

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [main]
  pull_request:

jobs:
  python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: server
            context: python
            dockerfile: Dockerfile.server
          - service: agents
            context: python
            dockerfile: Dockerfile.agents
          - service: mcp
            context: python
            dockerfile: Dockerfile.mcp
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: python/requirements.txt
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Determine cache
        id: cache
        run: |
          if docker buildx imagetools inspect ghcr.io/jacksmack1971/archonreloaded:${{ matrix.service }}-cache >/dev/null 2>&1; then
            echo "ref=type=registry,ref=ghcr.io/jacksmack1971/archonreloaded:${{ matrix.service }}-cache" >> "$GITHUB_OUTPUT"
          fi
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          push: false
          tags: ghcr.io/jacksmack1971/archonreloaded:${{ matrix.service }}
          cache-from: ${{ steps.cache.outputs.ref }}
          cache-to: type=registry,ref=ghcr.io/jacksmack1971/archonreloaded:${{ matrix.service }}-cache,mode=max
      - name: Install dependencies
        working-directory: python
        run: pip install -r requirements.txt
      - name: Test
        working-directory: python
        run: pytest --maxfail=1 --disable-warnings --cov=. --cov-report=xml
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-python-${{ matrix.service }}
          path: python/coverage.xml
          if-no-files-found: ignore

  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: nodejs
            workdir: nodejs
            context: nodejs
            dockerfile: Dockerfile.mcp
          - package: archon-ui-main
            workdir: archon-ui-main
            context: archon-ui-main
            dockerfile: Dockerfile
          - package: docs
            workdir: docs
            context: docs
            dockerfile: Dockerfile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.workdir }}/package-lock.json
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: Determine cache
        id: cache
        run: |
          if docker buildx imagetools inspect ghcr.io/jacksmack1971/archonreloaded:${{ matrix.package }}-cache >/dev/null 2>&1; then
            echo "ref=type=registry,ref=ghcr.io/jacksmack1971/archonreloaded:${{ matrix.package }}-cache" >> "$GITHUB_OUTPUT"
          fi
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          push: false
          tags: ghcr.io/jacksmack1971/archonreloaded:${{ matrix.package }}
          cache-from: ${{ steps.cache.outputs.ref }}
          cache-to: type=registry,ref=ghcr.io/jacksmack1971/archonreloaded:${{ matrix.package }}-cache,mode=max
      - name: Install dependencies
        working-directory: ${{ matrix.workdir }}
        run: npm ci
      - name: Test
        working-directory: ${{ matrix.workdir }}
        run: npx vitest run --coverage
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.package }}
          path: ${{ matrix.workdir }}/coverage
          if-no-files-found: ignore
